### A Pluto.jl notebook ###
# v0.12.20

using Markdown
using InteractiveUtils

# ╔═╡ f4ac10bc-68be-11eb-17f4-3954c021ffd2
begin
using Plots,Roots
plotlyjs()
end

# ╔═╡ 26313f7a-68c1-11eb-3464-fd8ac0fb1935
begin
# Funciones
origen(x) = 0
# Secciones
para_pensar(mensaje="",titulo="Para pensar") = Markdown.MD(Markdown.Admonition("hint",titulo,[mensaje]))
correcto(mensaje="Bien") = Markdown.MD(Markdown.Admonition("correct","Correcto",[mensaje]))
ayuda(mensaje="Ayuda") = Markdown.MD(Markdown.Admonition("hint","Ayuda",[mensaje]))
casi(mensaje="casi") = Markdown.MD(Markdown.Admonition("warning","Casi",[mensaje]))
segui_intentando(mensaje="Segui intentando") = Markdown.MD(Markdown.Admonition("danger","Segui intentando",[mensaje]))
nothing
end

# ╔═╡ c355f514-7302-11eb-0d41-13677a31526f
md"""
# 1.4 Raices

Empecemos con dos ejemplos
"""

# ╔═╡ e2acc892-7302-11eb-3f6e-75285327ebce
# > Buscar ejemplo en el que busco la interseccion de una recta con el y=0

# ```pluto
# grafica 
# f(x) = m*x + b
# ```

# ╔═╡ 720e17cc-7304-11eb-0c82-056213037f6c
# > Buscar ejemplo en el que busco la interseccion de una recta con otra funcion

# ```pluto
# grafica 
# f(x) "+" g(x)
# ```

# ╔═╡ 85ce48ea-7304-11eb-3926-bb12af8b97f9
md"""
Ahora que ya experimentaron un poco podriamos decir que ambos problemas consistían en encontrar las intersecciones entre las gráficas de dos funciones.

Y para ponerlo en términos más formales, en esta sección vamos a tratar de responder la siguiente pregunta:

"Dada una funcion $f$ y dado un valor de $y_{0}$, ¿para qué valores de $x$ se cumple que $f(x) = y_{0}$?"

Veamos que quiere decir ésto de manera gráfica.

"""

# ╔═╡ 3dbcd8fe-7535-11eb-271d-c39c1f16007b
md"""
Probar distintas funciones $f(x)$ y valores de $y_{0}$
"""

# ╔═╡ 92493f70-74b3-11eb-32a6-450151730bc5
f(x) = 2*x + 2/3;

# ╔═╡ baa2b574-7534-11eb-1ac2-2580a4c6a1b4
y0 = 2;

# ╔═╡ b3fdae0a-74b1-11eb-1eb2-9bd3ab3a38e8
begin
plot(f,label="f(x)")
plot!(x->y0,label="y0 = $y0")
ceros = find_zeros(x->f(x)-y0,-100,100)
scatter!(ceros,y0.*ones(length(ceros)),label="raices")
end

# ╔═╡ 916bb228-74b2-11eb-38dd-c9251e654449
para_pensar(md"Siempre existen soluciones a estos problemas?")

# ╔═╡ 62962da4-74b3-11eb-1ab3-99d705c4b684
para_pensar(md"Que condiciones se tienen que cumplir para que hayan soluciones?")

# ╔═╡ c3fbca46-7304-11eb-2924-4da8322d5809
md"""
#### *Ejercicio*:
Probar definiendo distintas funciones y variando el valor de $y_{0}$ tratar de responder las siguientes preguntas:

- ¿Cuál es el valor de y0 para el que hay más intersecciones con f?
- ¿Existe algun valor de y0 para el cual no hay intersección con f?
- ¿Cuál es el mayor número de intersecciones que se pueden lograr? ¿Con cuál función?
"""

# ╔═╡ eb4f1276-7304-11eb-0b84-6fd5e03513cb
md"## ¿Qué son las raices o ceros de una función?"

# ╔═╡ fd10b3b6-7304-11eb-0dc9-db2cedf1a1a7
md"""
El problema de encontrar las soluciones a una ecuacion del tipo $f(x) = y_{0}$ es equivalente a encontrar las soluciones a $\hat{f}(x) = f(x) - y_{0} = 0$. 
Por esta equivalencia es por lo que normalmente uno se refiere a encontrar los **"ceros"** de una funcion.
"""

# ╔═╡ a78c764a-753a-11eb-1594-2dd3fa2c6d68
function plot_diferencia(f,g,label_izq=["f(x)" "g(x)"],label_der=["f(x)-g(x)" "Eje X"])
G(x) = f(x) - g(x)
pf = plot([f,g],label=label_izq)
pg = plot([G,x->0],label=label_der)
plot(pf,pg)
end;

# ╔═╡ 1e29aa02-753b-11eb-02c7-d1a853467883
plot_diferencia(f,x->y0,["f(x)" "y0"],["f~(x)" "Eje X"])

# ╔═╡ c66bfa3e-753c-11eb-0ca5-4160d176ca41
md"Como vimos en el segundo ejemplo al principio del cuaderno, podemos generalizar este tipo de problemas a buscar la intersección entre dos funciones $f$ y $g$."

# ╔═╡ 9cd69398-7305-11eb-295d-6fdf7ddb2542
g(x) = 2*x^2 - 3

# ╔═╡ 9c82080a-7305-11eb-211a-d7771786f59c
plot_diferencia(f,g)

# ╔═╡ 9c61f344-7305-11eb-1dbd-6532bd781c0d
md"""# Soluciones analíticas 
Para cierto grupo de funciones existen soluciones analíticas con las que se pueden obtener los resultados exactos. Una solucion analitica es un resultado que tiene una formula definida"""

# ╔═╡ 9c481cee-7305-11eb-1fd6-7b4c6a2686e0
md"""## Polinomios
Las funciones del estilo $a_{n} x^n + a_{n-1} x^{n-1} + ... + a_{1} x + a_{0}$"
"""

# ╔═╡ 9c30f2da-7305-11eb-250e-99a63db898fb
md"""### Caso n=1, función lineal o recta

Este es un caso sencillo dado que para encontrar la solución de $a_{1} x + a_{0} = y_{0}$ hay que _despejar_ la variable $x$."""

# ╔═╡ c3f7d326-7305-11eb-2b19-adcd9687ae87
# Expresar como k(x-x0)

# ╔═╡ c3d50cc0-7305-11eb-1a78-ddae1b1f3c05
md"### Caso n = 2, función cuadrática o parábola"

# ╔═╡ c3bab232-7305-11eb-2d3b-35022c27ccb1
# En este caso tenemos que 
# $f(x) = a2 x^2 + a1 x + a0$
# p(x) = k (x-x0)(x-x1)
# '''pluto
# grafica
# f "+" p 
# '''

# ╔═╡ c3a545a2-7305-11eb-2130-7160917fd3df
# - Polinomios (n>2)

# ╔═╡ dfa53ff8-7305-11eb-06e7-45111571cca9
md"## Trigonometricas"

# ╔═╡ 005d9844-7540-11eb-05b7-0fe23bbf5ed5
plot(cos,range(-10,stop=10,length=300),label="cos(x)")

# ╔═╡ 4fc7fa5a-7540-11eb-28b2-7db13e3b8dc4
plot(sin,range(-10,stop=10,length=300),label="sen(x)")

# ╔═╡ df0d09fe-7305-11eb-2f38-c9ec9b9c6a64
# - Exponenciales

# ╔═╡ deeadaf0-7305-11eb-2e22-63da033f5728
# - Logaritmos

# ╔═╡ deb9f3ae-7305-11eb-1c17-0903150d57e3
# - Racionales

# ╔═╡ 5f9de7d2-71f8-11eb-0f29-2bce98c6bb0c
# ## Importancia de las raices + derivadas (spoiler)



# ## Ejemplos
# - Optimizacion (maximos, minimos)

# ```julia=
# Hola Mundo $\lambda Plata$
# ```

# ╔═╡ 5ef155ee-71f8-11eb-36be-617d0c2dfa2f


# ╔═╡ da4889e8-68c1-11eb-203b-27757bda8e53
begin
plot(f,label="f(x)")
plot(g,label="g(x)")
plot!(origen,label="origen")
end

# ╔═╡ cb11b618-68c2-11eb-2a92-f9cd454c8043
md"$f(x)$"

# ╔═╡ a370c200-68c4-11eb-1857-3d3a9f9342f1
h(x) = 1

# ╔═╡ 87132be6-68c4-11eb-3c7f-2fe75de34dd5
# begin
# F(x) = f(x);
# G(x) = f(x) - h(x);
# end

# ╔═╡ 191bf6c2-68c6-11eb-1cda-b92f1842c3b0
begin
A(x) = sin(x)
B(x) = cos(x)
plot_diferencia(A,B)
end

# ╔═╡ Cell order:
# ╟─f4ac10bc-68be-11eb-17f4-3954c021ffd2
# ╟─26313f7a-68c1-11eb-3464-fd8ac0fb1935
# ╠═c355f514-7302-11eb-0d41-13677a31526f
# ╠═e2acc892-7302-11eb-3f6e-75285327ebce
# ╠═720e17cc-7304-11eb-0c82-056213037f6c
# ╟─85ce48ea-7304-11eb-3926-bb12af8b97f9
# ╠═3dbcd8fe-7535-11eb-271d-c39c1f16007b
# ╠═92493f70-74b3-11eb-32a6-450151730bc5
# ╠═baa2b574-7534-11eb-1ac2-2580a4c6a1b4
# ╟─b3fdae0a-74b1-11eb-1eb2-9bd3ab3a38e8
# ╟─916bb228-74b2-11eb-38dd-c9251e654449
# ╟─62962da4-74b3-11eb-1ab3-99d705c4b684
# ╟─c3fbca46-7304-11eb-2924-4da8322d5809
# ╟─eb4f1276-7304-11eb-0b84-6fd5e03513cb
# ╠═fd10b3b6-7304-11eb-0dc9-db2cedf1a1a7
# ╠═a78c764a-753a-11eb-1594-2dd3fa2c6d68
# ╟─1e29aa02-753b-11eb-02c7-d1a853467883
# ╠═c66bfa3e-753c-11eb-0ca5-4160d176ca41
# ╠═9cd69398-7305-11eb-295d-6fdf7ddb2542
# ╟─9c82080a-7305-11eb-211a-d7771786f59c
# ╠═9c61f344-7305-11eb-1dbd-6532bd781c0d
# ╠═9c481cee-7305-11eb-1fd6-7b4c6a2686e0
# ╠═9c30f2da-7305-11eb-250e-99a63db898fb
# ╠═c3f7d326-7305-11eb-2b19-adcd9687ae87
# ╠═c3d50cc0-7305-11eb-1a78-ddae1b1f3c05
# ╠═c3bab232-7305-11eb-2d3b-35022c27ccb1
# ╠═c3a545a2-7305-11eb-2130-7160917fd3df
# ╠═dfa53ff8-7305-11eb-06e7-45111571cca9
# ╠═005d9844-7540-11eb-05b7-0fe23bbf5ed5
# ╠═4fc7fa5a-7540-11eb-28b2-7db13e3b8dc4
# ╠═df0d09fe-7305-11eb-2f38-c9ec9b9c6a64
# ╠═deeadaf0-7305-11eb-2e22-63da033f5728
# ╠═deb9f3ae-7305-11eb-1c17-0903150d57e3
# ╠═5f9de7d2-71f8-11eb-0f29-2bce98c6bb0c
# ╠═5ef155ee-71f8-11eb-36be-617d0c2dfa2f
# ╠═da4889e8-68c1-11eb-203b-27757bda8e53
# ╠═cb11b618-68c2-11eb-2a92-f9cd454c8043
# ╠═a370c200-68c4-11eb-1857-3d3a9f9342f1
# ╠═87132be6-68c4-11eb-3c7f-2fe75de34dd5
# ╠═191bf6c2-68c6-11eb-1cda-b92f1842c3b0
